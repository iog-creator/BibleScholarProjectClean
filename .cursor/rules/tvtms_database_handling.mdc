---
type: restored
title: tvtms_database_handling
description: This file was automatically restored or completed.
globs: []
alwaysApply: false
---

--- 
type: always 
title: TVTMS Database Handling 
description: Guidelines for TVTMS database operations and versification mapping 
globs: 
  - "src/tvtms/**/*.py" 
  - "src/database/tvtms_*.py" 
  - "tests/unit/test_*tvtms*.py" 
alwaysApply: false 
--- 
 

# TVTMS Database Handling

## Connection Type Support

TVTMS database functions must support multiple connection types:

1. **Direct psycopg Connection**:
   - Use with `cursor()` context manager for transactions
   - Explicitly commit with `conn.commit()`
   - Check for connection type with `hasattr(conn, 'cursor')`

2. **SQLAlchemy ConnectionFairy**:
   - Use with `text()` for SQL queries
   - Parameter binding with named parameters (`:param_name`)
   - Explicitly commit with `conn.commit()`

## Data Storage Functions

All TVTMS data storage functions must:

1. **Accept uniform parameters**:
   - First parameter: The data to store (mappings, rules, docs) 
   - Second parameter (optional): Database connection

2. **Handle transactions properly**:
   - Begin transaction
   - Clear existing data when appropriate
   - Insert new data
   - Handle errors with try/except
   - Commit transaction when successful
   - Detailed error logging with context

## Error Handling

1. **Connection errors**: Log connection failures with descriptive messages
2. **Data validation errors**: Log data validation failures with sample values
3. **Transaction errors**: Log transaction failures with SQL state
4. **Always provide rollback**: Ensure transactions are rolled back on error

## DSPy Integration

1. **Parsing errors**: Log to versification_parser_schema_issues.jsonl
2. **Successful parses**: Log sample successful parses to tvtms_parsing_examples.jsonl
3. **Schema**: Use consistent JSON structure for all logging
